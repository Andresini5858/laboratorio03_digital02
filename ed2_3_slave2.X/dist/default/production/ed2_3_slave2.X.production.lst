

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 03 02:13:27 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     008F                     	;# 
   101     0090                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0095                     	;# 
   109     0096                     	;# 
   110     0097                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009A                     	;# 
   114     009B                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     0105                     	;# 
   120     0107                     	;# 
   121     0108                     	;# 
   122     0109                     	;# 
   123     010C                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     010E                     	;# 
   127     010F                     	;# 
   128     0185                     	;# 
   129     0187                     	;# 
   130     0188                     	;# 
   131     0189                     	;# 
   132     018C                     	;# 
   133     018D                     	;# 
   134     0000                     	;# 
   135     0001                     	;# 
   136     0002                     	;# 
   137     0003                     	;# 
   138     0004                     	;# 
   139     0005                     	;# 
   140     0006                     	;# 
   141     0007                     	;# 
   142     0008                     	;# 
   143     0009                     	;# 
   144     000A                     	;# 
   145     000B                     	;# 
   146     000C                     	;# 
   147     000D                     	;# 
   148     000E                     	;# 
   149     000E                     	;# 
   150     000F                     	;# 
   151     0010                     	;# 
   152     0011                     	;# 
   153     0012                     	;# 
   154     0013                     	;# 
   155     0014                     	;# 
   156     0015                     	;# 
   157     0015                     	;# 
   158     0016                     	;# 
   159     0017                     	;# 
   160     0018                     	;# 
   161     0019                     	;# 
   162     001A                     	;# 
   163     001B                     	;# 
   164     001B                     	;# 
   165     001C                     	;# 
   166     001D                     	;# 
   167     001E                     	;# 
   168     001F                     	;# 
   169     0081                     	;# 
   170     0085                     	;# 
   171     0086                     	;# 
   172     0087                     	;# 
   173     0088                     	;# 
   174     0089                     	;# 
   175     008C                     	;# 
   176     008D                     	;# 
   177     008E                     	;# 
   178     008F                     	;# 
   179     0090                     	;# 
   180     0091                     	;# 
   181     0092                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0094                     	;# 
   186     0095                     	;# 
   187     0096                     	;# 
   188     0097                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009A                     	;# 
   192     009B                     	;# 
   193     009C                     	;# 
   194     009D                     	;# 
   195     009E                     	;# 
   196     009F                     	;# 
   197     0105                     	;# 
   198     0107                     	;# 
   199     0108                     	;# 
   200     0109                     	;# 
   201     010C                     	;# 
   202     010C                     	;# 
   203     010D                     	;# 
   204     010E                     	;# 
   205     010F                     	;# 
   206     0185                     	;# 
   207     0187                     	;# 
   208     0188                     	;# 
   209     0189                     	;# 
   210     018C                     	;# 
   211     018D                     	;# 
   212     0000                     	;# 
   213     0001                     	;# 
   214     0002                     	;# 
   215     0003                     	;# 
   216     0004                     	;# 
   217     0005                     	;# 
   218     0006                     	;# 
   219     0007                     	;# 
   220     0008                     	;# 
   221     0009                     	;# 
   222     000A                     	;# 
   223     000B                     	;# 
   224     000C                     	;# 
   225     000D                     	;# 
   226     000E                     	;# 
   227     000E                     	;# 
   228     000F                     	;# 
   229     0010                     	;# 
   230     0011                     	;# 
   231     0012                     	;# 
   232     0013                     	;# 
   233     0014                     	;# 
   234     0015                     	;# 
   235     0015                     	;# 
   236     0016                     	;# 
   237     0017                     	;# 
   238     0018                     	;# 
   239     0019                     	;# 
   240     001A                     	;# 
   241     001B                     	;# 
   242     001B                     	;# 
   243     001C                     	;# 
   244     001D                     	;# 
   245     001E                     	;# 
   246     001F                     	;# 
   247     0081                     	;# 
   248     0085                     	;# 
   249     0086                     	;# 
   250     0087                     	;# 
   251     0088                     	;# 
   252     0089                     	;# 
   253     008C                     	;# 
   254     008D                     	;# 
   255     008E                     	;# 
   256     008F                     	;# 
   257     0090                     	;# 
   258     0091                     	;# 
   259     0092                     	;# 
   260     0093                     	;# 
   261     0093                     	;# 
   262     0093                     	;# 
   263     0094                     	;# 
   264     0095                     	;# 
   265     0096                     	;# 
   266     0097                     	;# 
   267     0098                     	;# 
   268     0099                     	;# 
   269     009A                     	;# 
   270     009B                     	;# 
   271     009C                     	;# 
   272     009D                     	;# 
   273     009E                     	;# 
   274     009F                     	;# 
   275     0105                     	;# 
   276     0107                     	;# 
   277     0108                     	;# 
   278     0109                     	;# 
   279     010C                     	;# 
   280     010C                     	;# 
   281     010D                     	;# 
   282     010E                     	;# 
   283     010F                     	;# 
   284     0185                     	;# 
   285     0187                     	;# 
   286     0188                     	;# 
   287     0189                     	;# 
   288     018C                     	;# 
   289     018D                     	;# 
   290     0013                     _SSPBUF	set	19
   291     0014                     _SSPCON	set	20
   292     000B                     _INTCONbits	set	11
   293     0008                     _PORTD	set	8
   294     0006                     _PORTB	set	6
   295     001E                     _ADRESH	set	30
   296     000C                     _PIR1bits	set	12
   297     001F                     _ADCON0bits	set	31
   298     0094                     _SSPSTATbits	set	148
   299     0094                     _SSPSTAT	set	148
   300     0087                     _TRISCbits	set	135
   301     009F                     _ADCON1bits	set	159
   302     008F                     _OSCCONbits	set	143
   303     008C                     _PIE1bits	set	140
   304     0088                     _TRISD	set	136
   305     0086                     _TRISB	set	134
   306     0085                     _TRISAbits	set	133
   307     0189                     _ANSELH	set	393
   308     0188                     _ANSELbits	set	392
   309                           
   310                           	psect	cinit
   311     000F                     start_initialization:	
   312                           ; #config settings
   313                           
   314     000F                     __initialization:
   315                           
   316                           ; Clear objects allocated to COMMON
   317     000F  01F6               	clrf	__pbssCOMMON& (0+127)
   318     0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   319     0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   320     0012                     end_of_initialization:	
   321                           ;End of C runtime variable initialization code
   322                           
   323     0012                     __end_of__initialization:
   324     0012  0183               	clrf	3
   325     0013  120A  118A  28AC   	ljmp	_main	;jump to C main() function
   326                           
   327                           	psect	bssCOMMON
   328     0076                     __pbssCOMMON:
   329     0076                     _var:
   330     0076                     	ds	2
   331     0078                     _voltaje1:
   332     0078                     	ds	1
   333                           
   334                           	psect	cstackCOMMON
   335     0070                     __pcstackCOMMON:
   336     0070                     ?_setup:
   337     0070                     ?_setupADC:	
   338                           ; 1 bytes @ 0x0
   339                           
   340     0070                     ?_spiRead:	
   341                           ; 1 bytes @ 0x0
   342                           
   343     0070                     ??_spiRead:	
   344                           ; 1 bytes @ 0x0
   345                           
   346     0070                     ?_spiWrite:	
   347                           ; 1 bytes @ 0x0
   348                           
   349     0070                     ??_spiWrite:	
   350                           ; 1 bytes @ 0x0
   351                           
   352     0070                     ?_main:	
   353                           ; 1 bytes @ 0x0
   354                           
   355     0070                     ?_isr:	
   356                           ; 1 bytes @ 0x0
   357                           
   358     0070                     ?_spiReceiveWait:	
   359                           ; 1 bytes @ 0x0
   360                           
   361     0070                     ??_spiReceiveWait:	
   362                           ; 1 bytes @ 0x0
   363                           
   364     0070                     spiWrite@dat:	
   365                           ; 1 bytes @ 0x0
   366                           
   367                           
   368                           ; 1 bytes @ 0x0
   369     0070                     	ds	1
   370     0071                     ??_isr:
   371                           
   372                           ; 1 bytes @ 0x1
   373     0071                     	ds	4
   374     0075                     ??_setupADC:
   375     0075                     ??_spiInit:	
   376                           ; 1 bytes @ 0x5
   377                           
   378     0075                     spiInit@sType:	
   379                           ; 1 bytes @ 0x5
   380                           
   381                           
   382                           ; 1 bytes @ 0x5
   383     0075                     	ds	1
   384     0076                     ??_setup:
   385     0076                     ??_main:	
   386                           ; 1 bytes @ 0x6
   387                           
   388                           
   389                           	psect	cstackBANK0
   390     0020                     __pcstackBANK0:	
   391                           ; 1 bytes @ 0x6
   392                           
   393     0020                     ?_spiInit:
   394     0020                     spiInit@sDataSample:	
   395                           ; 1 bytes @ 0x0
   396                           
   397                           
   398                           ; 1 bytes @ 0x0
   399     0020                     	ds	1
   400     0021                     spiInit@sClockIdle:
   401                           
   402                           ; 1 bytes @ 0x1
   403     0021                     	ds	1
   404     0022                     spiInit@sTransmitEdge:
   405                           
   406                           ; 1 bytes @ 0x2
   407     0022                     	ds	1
   408                           
   409                           	psect	maintext
   410     00AC                     __pmaintext:	
   411 ;;
   412 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   413 ;;
   414 ;; *************** function _main *****************
   415 ;; Defined at:
   416 ;;		line 40 in file "main.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2, status,0, pclath, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : B00/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   430 ;;      Params:         0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0
   432 ;;      Temps:          0       0       0       0       0
   433 ;;      Totals:         0       0       0       0       0
   434 ;;Total ram usage:        0 bytes
   435 ;; Hardware stack levels required when called: 5
   436 ;; This function calls:
   437 ;;		_setup
   438 ;;		_setupADC
   439 ;; This function is called by:
   440 ;;		Startup code after reset
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444     00AC                     _main:	
   445                           ;psect for function _main
   446                           
   447     00AC                     l854:	
   448                           ;incstack = 0
   449                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   450                           
   451                           
   452                           ;main.c: 41:     setup();
   453     00AC  120A  118A  2050  120A  118A  	fcall	_setup
   454                           
   455                           ;main.c: 42:     setupADC();
   456     00B1  120A  118A  2097  120A  118A  	fcall	_setupADC
   457     00B6                     l856:
   458                           
   459                           ;main.c: 44:         ADCON0bits.GO = 1;
   460     00B6  1283               	bcf	3,5	;RP0=0, select bank0
   461     00B7  1303               	bcf	3,6	;RP1=0, select bank0
   462     00B8  149F               	bsf	31,1	;volatile
   463     00B9  28B6               	goto	l856
   464     00BA  120A  118A  280C   	ljmp	start
   465     00BD                     __end_of_main:
   466                           
   467                           	psect	text1
   468     0097                     __ptext1:	
   469 ;; *************** function _setupADC *****************
   470 ;; Defined at:
   471 ;;		line 91 in file "main.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   485 ;;      Params:         0       0       0       0       0
   486 ;;      Locals:         0       0       0       0       0
   487 ;;      Temps:          1       0       0       0       0
   488 ;;      Totals:         1       0       0       0       0
   489 ;;Total ram usage:        1 bytes
   490 ;; Hardware stack levels used: 1
   491 ;; Hardware stack levels required when called: 3
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499     0097                     _setupADC:	
   500                           ;psect for function _setupADC
   501                           
   502     0097                     l732:	
   503                           ;incstack = 0
   504                           ; Regs used in _setupADC: [wreg]
   505                           
   506                           
   507                           ;main.c: 92:     ADCON0bits.ADCS1 = 0;
   508     0097  1283               	bcf	3,5	;RP0=0, select bank0
   509     0098  1303               	bcf	3,6	;RP1=0, select bank0
   510     0099  139F               	bcf	31,7	;volatile
   511                           
   512                           ;main.c: 93:     ADCON0bits.ADCS0 = 1;
   513     009A  171F               	bsf	31,6	;volatile
   514                           
   515                           ;main.c: 95:     ADCON1bits.VCFG1 = 0;
   516     009B  1683               	bsf	3,5	;RP0=1, select bank1
   517     009C  1303               	bcf	3,6	;RP1=0, select bank1
   518     009D  129F               	bcf	31,5	;volatile
   519                           
   520                           ;main.c: 96:     ADCON1bits.VCFG0 = 0;
   521     009E  121F               	bcf	31,4	;volatile
   522                           
   523                           ;main.c: 98:     ADCON1bits.ADFM = 0;
   524     009F  139F               	bcf	31,7	;volatile
   525                           
   526                           ;main.c: 100:     ADCON0bits.CHS3 = 0;
   527     00A0  1283               	bcf	3,5	;RP0=0, select bank0
   528     00A1  1303               	bcf	3,6	;RP1=0, select bank0
   529     00A2  129F               	bcf	31,5	;volatile
   530                           
   531                           ;main.c: 101:     ADCON0bits.CHS2 = 0;
   532     00A3  121F               	bcf	31,4	;volatile
   533                           
   534                           ;main.c: 102:     ADCON0bits.CHS1 = 0;
   535     00A4  119F               	bcf	31,3	;volatile
   536                           
   537                           ;main.c: 103:     ADCON0bits.CHS0 = 0;
   538     00A5  111F               	bcf	31,2	;volatile
   539                           
   540                           ;main.c: 105:     ADCON0bits.ADON = 1;
   541     00A6  141F               	bsf	31,0	;volatile
   542     00A7                     l734:
   543                           
   544                           ;main.c: 106:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   545     00A7  3021               	movlw	33
   546     00A8  00F5               	movwf	??_setupADC
   547     00A9                     u97:
   548     00A9  0BF5               	decfsz	??_setupADC,f
   549     00AA  28A9               	goto	u97
   550     00AB                     l70:
   551     00AB  0008               	return
   552     00AC                     __end_of_setupADC:
   553                           
   554                           	psect	text2
   555     0050                     __ptext2:	
   556 ;; *************** function _setup *****************
   557 ;; Defined at:
   558 ;;		line 66 in file "main.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, status,2, status,0, pclath, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   572 ;;      Params:         0       0       0       0       0
   573 ;;      Locals:         0       0       0       0       0
   574 ;;      Temps:          0       0       0       0       0
   575 ;;      Totals:         0       0       0       0       0
   576 ;;Total ram usage:        0 bytes
   577 ;; Hardware stack levels used: 1
   578 ;; Hardware stack levels required when called: 4
   579 ;; This function calls:
   580 ;;		_spiInit
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586     0050                     _setup:	
   587                           ;psect for function _setup
   588                           
   589     0050                     l828:	
   590                           ;incstack = 0
   591                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   592                           
   593                           
   594                           ;main.c: 67:     ANSELbits.ANS0 = 1;
   595     0050  1683               	bsf	3,5	;RP0=1, select bank3
   596     0051  1703               	bsf	3,6	;RP1=1, select bank3
   597     0052  1408               	bsf	8,0	;volatile
   598                           
   599                           ;main.c: 68:     ANSELbits.ANS4 = 0;
   600     0053  1208               	bcf	8,4	;volatile
   601     0054                     l830:
   602                           
   603                           ;main.c: 69:     ANSELH = 0;
   604     0054  0189               	clrf	9	;volatile
   605     0055                     l832:
   606                           
   607                           ;main.c: 71:     TRISAbits.TRISA5 = 1;
   608     0055  1683               	bsf	3,5	;RP0=1, select bank1
   609     0056  1303               	bcf	3,6	;RP1=0, select bank1
   610     0057  1685               	bsf	5,5	;volatile
   611                           
   612                           ;main.c: 72:     TRISB = 0;
   613     0058  0186               	clrf	6	;volatile
   614                           
   615                           ;main.c: 73:     TRISD = 0;
   616     0059  0188               	clrf	8	;volatile
   617                           
   618                           ;main.c: 75:     PORTB = 0;
   619     005A  1283               	bcf	3,5	;RP0=0, select bank0
   620     005B  1303               	bcf	3,6	;RP1=0, select bank0
   621     005C  0186               	clrf	6	;volatile
   622                           
   623                           ;main.c: 76:     PORTD = 0;
   624     005D  0188               	clrf	8	;volatile
   625     005E                     l834:
   626                           
   627                           ;main.c: 78:     INTCONbits.GIE = 1;
   628     005E  178B               	bsf	11,7	;volatile
   629     005F                     l836:
   630                           
   631                           ;main.c: 79:     INTCONbits.PEIE = 1;
   632     005F  170B               	bsf	11,6	;volatile
   633     0060                     l838:
   634                           
   635                           ;main.c: 80:     PIE1bits.ADIE = 1;
   636     0060  1683               	bsf	3,5	;RP0=1, select bank1
   637     0061  1303               	bcf	3,6	;RP1=0, select bank1
   638     0062  170C               	bsf	12,6	;volatile
   639     0063                     l840:
   640                           
   641                           ;main.c: 81:     PIR1bits.SSPIF = 0;
   642     0063  1283               	bcf	3,5	;RP0=0, select bank0
   643     0064  1303               	bcf	3,6	;RP1=0, select bank0
   644     0065  118C               	bcf	12,3	;volatile
   645     0066                     l842:
   646                           
   647                           ;main.c: 82:     PIE1bits.SSPIE = 1;
   648     0066  1683               	bsf	3,5	;RP0=1, select bank1
   649     0067  1303               	bcf	3,6	;RP1=0, select bank1
   650     0068  158C               	bsf	12,3	;volatile
   651     0069                     l844:
   652                           
   653                           ;main.c: 84:     OSCCONbits.IRCF2 = 1;
   654     0069  170F               	bsf	15,6	;volatile
   655     006A                     l846:
   656                           
   657                           ;main.c: 85:     OSCCONbits.IRCF1 = 1;
   658     006A  168F               	bsf	15,5	;volatile
   659     006B                     l848:
   660                           
   661                           ;main.c: 86:     OSCCONbits.IRCF0 = 0;
   662     006B  120F               	bcf	15,4	;volatile
   663     006C                     l850:
   664                           
   665                           ;main.c: 87:     OSCCONbits.SCS = 1;
   666     006C  140F               	bsf	15,0	;volatile
   667     006D                     l852:
   668                           
   669                           ;main.c: 88:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   670     006D  1283               	bcf	3,5	;RP0=0, select bank0
   671     006E  1303               	bcf	3,6	;RP1=0, select bank0
   672     006F  01A0               	clrf	spiInit@sDataSample
   673     0070  01A1               	clrf	spiInit@sClockIdle
   674     0071  01A2               	clrf	spiInit@sTransmitEdge
   675     0072  3024               	movlw	36
   676     0073  120A  118A  2079  120A  118A  	fcall	_spiInit
   677     0078                     l67:
   678     0078  0008               	return
   679     0079                     __end_of_setup:
   680                           
   681                           	psect	text3
   682     0079                     __ptext3:	
   683 ;; *************** function _spiInit *****************
   684 ;; Defined at:
   685 ;;		line 12 in file "../ed2_3_master.X/SPI.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;  sType           1    wreg     enum E1292
   688 ;;  sDataSample     1    0[BANK0 ] enum E1300
   689 ;;  sClockIdle      1    1[BANK0 ] enum E1304
   690 ;;  sTransmitEdg    1    2[BANK0 ] enum E1308
   691 ;; Auto vars:     Size  Location     Type
   692 ;;  sType           1    5[COMMON] enum E1292
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, status,2, status,0
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   702 ;;      Params:         0       3       0       0       0
   703 ;;      Locals:         1       0       0       0       0
   704 ;;      Temps:          0       0       0       0       0
   705 ;;      Totals:         1       3       0       0       0
   706 ;;Total ram usage:        4 bytes
   707 ;; Hardware stack levels used: 1
   708 ;; Hardware stack levels required when called: 3
   709 ;; This function calls:
   710 ;;		Nothing
   711 ;; This function is called by:
   712 ;;		_setup
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716     0079                     _spiInit:	
   717                           ;psect for function _spiInit
   718                           
   719                           
   720                           ;incstack = 0
   721                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   722                           ;spiInit@sType stored from wreg
   723     0079  00F5               	movwf	spiInit@sType
   724     007A                     l818:
   725                           
   726                           ;../ed2_3_master.X/SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, 
      +                          Spi_Clock_Idle sClockIdle, Spi_Transmit_Edge sTransmitEdge);../ed2_3_master.X/SPI.c: 13:
      +                           {;../ed2_3_master.X/SPI.c: 14:     TRISCbits.TRISC5 = 0;
   727     007A  1683               	bsf	3,5	;RP0=1, select bank1
   728     007B  1303               	bcf	3,6	;RP1=0, select bank1
   729     007C  1287               	bcf	7,5	;volatile
   730                           
   731                           ;../ed2_3_master.X/SPI.c: 15:     if(sType & 0b00000100)
   732     007D  1D75               	btfss	spiInit@sType,2
   733     007E  2880               	goto	u81
   734     007F  2881               	goto	u80
   735     0080                     u81:
   736     0080  2889               	goto	l824
   737     0081                     u80:
   738     0081                     l820:
   739                           
   740                           ;../ed2_3_master.X/SPI.c: 16:     {;../ed2_3_master.X/SPI.c: 17:         SSPSTAT = sTran
      +                          smitEdge;
   741     0081  1283               	bcf	3,5	;RP0=0, select bank0
   742     0082  1303               	bcf	3,6	;RP1=0, select bank0
   743     0083  0822               	movf	spiInit@sTransmitEdge,w
   744     0084  1683               	bsf	3,5	;RP0=1, select bank1
   745     0085  1303               	bcf	3,6	;RP1=0, select bank1
   746     0086  0094               	movwf	20	;volatile
   747     0087                     l822:
   748                           
   749                           ;../ed2_3_master.X/SPI.c: 18:         TRISCbits.TRISC3 = 1;
   750     0087  1587               	bsf	7,3	;volatile
   751                           
   752                           ;../ed2_3_master.X/SPI.c: 19:     }
   753     0088  2891               	goto	l84
   754     0089                     l824:
   755                           
   756                           ;../ed2_3_master.X/SPI.c: 21:     {;../ed2_3_master.X/SPI.c: 22:         SSPSTAT = sData
      +                          Sample | sTransmitEdge;
   757     0089  1283               	bcf	3,5	;RP0=0, select bank0
   758     008A  1303               	bcf	3,6	;RP1=0, select bank0
   759     008B  0820               	movf	spiInit@sDataSample,w
   760     008C  0422               	iorwf	spiInit@sTransmitEdge,w
   761     008D  1683               	bsf	3,5	;RP0=1, select bank1
   762     008E  1303               	bcf	3,6	;RP1=0, select bank1
   763     008F  0094               	movwf	20	;volatile
   764     0090                     l826:
   765                           
   766                           ;../ed2_3_master.X/SPI.c: 23:         TRISCbits.TRISC3 = 0;
   767     0090  1187               	bcf	7,3	;volatile
   768     0091                     l84:	
   769                           ;../ed2_3_master.X/SPI.c: 24:     }
   770                           
   771                           
   772                           ;../ed2_3_master.X/SPI.c: 26:     SSPCON = sType | sClockIdle;
   773     0091  0875               	movf	spiInit@sType,w
   774     0092  1283               	bcf	3,5	;RP0=0, select bank0
   775     0093  1303               	bcf	3,6	;RP1=0, select bank0
   776     0094  0421               	iorwf	spiInit@sClockIdle,w
   777     0095  0094               	movwf	20	;volatile
   778     0096                     l85:
   779     0096  0008               	return
   780     0097                     __end_of_spiInit:
   781                           
   782                           	psect	text4
   783     0016                     __ptext4:	
   784 ;; *************** function _isr *****************
   785 ;; Defined at:
   786 ;;		line 48 in file "main.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;		None
   789 ;; Auto vars:     Size  Location     Type
   790 ;;		None
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg, status,2, status,0, pclath, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   800 ;;      Params:         0       0       0       0       0
   801 ;;      Locals:         0       0       0       0       0
   802 ;;      Temps:          4       0       0       0       0
   803 ;;      Totals:         4       0       0       0       0
   804 ;;Total ram usage:        4 bytes
   805 ;; Hardware stack levels used: 1
   806 ;; Hardware stack levels required when called: 2
   807 ;; This function calls:
   808 ;;		_spiRead
   809 ;;		_spiWrite
   810 ;; This function is called by:
   811 ;;		Interrupt level 1
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815     0016                     _isr:	
   816                           ;psect for function _isr
   817                           
   818     0016                     i1l752:
   819                           
   820                           ;main.c: 49:     if (PIR1bits.ADIF == 1){
   821     0016  1283               	bcf	3,5	;RP0=0, select bank0
   822     0017  1303               	bcf	3,6	;RP1=0, select bank0
   823     0018  1F0C               	btfss	12,6	;volatile
   824     0019  281B               	goto	u3_21
   825     001A  281C               	goto	u3_20
   826     001B                     u3_21:
   827     001B  282A               	goto	i1l762
   828     001C                     u3_20:
   829     001C                     i1l754:
   830                           
   831                           ;main.c: 51:         if (ADCON0bits.CHS == 0b0000){
   832     001C  0C1F               	rrf	31,w	;volatile
   833     001D  00F1               	movwf	??_isr
   834     001E  0C71               	rrf	??_isr,w
   835     001F  390F               	andlw	15
   836     0020  3A00               	xorlw	0
   837     0021  1D03               	skipz
   838     0022  2824               	goto	u4_21
   839     0023  2825               	goto	u4_20
   840     0024                     u4_21:
   841     0024  2829               	goto	i1l760
   842     0025                     u4_20:
   843     0025                     i1l756:
   844                           
   845                           ;main.c: 52:             voltaje1 = ADRESH;
   846     0025  081E               	movf	30,w	;volatile
   847     0026  00F8               	movwf	_voltaje1
   848     0027                     i1l758:
   849                           
   850                           ;main.c: 53:             ADCON0bits.CHS = 0b0000;
   851     0027  30C3               	movlw	-61
   852     0028  059F               	andwf	31,f	;volatile
   853     0029                     i1l760:
   854                           
   855                           ;main.c: 55:         PIR1bits.ADIF = 0;
   856     0029  130C               	bcf	12,6	;volatile
   857     002A                     i1l762:
   858                           
   859                           ;main.c: 57:     if (PIR1bits.SSPIF == 1){
   860     002A  1D8C               	btfss	12,3	;volatile
   861     002B  282D               	goto	u5_21
   862     002C  282E               	goto	u5_20
   863     002D                     u5_21:
   864     002D  2849               	goto	i1l64
   865     002E                     u5_20:
   866     002E                     i1l764:
   867                           
   868                           ;main.c: 58:         var = spiRead();
   869     002E  120A  118A  20BD  120A  118A  	fcall	_spiRead
   870     0033  00F1               	movwf	??_isr
   871     0034  01F2               	clrf	??_isr+1
   872     0035  0871               	movf	??_isr,w
   873     0036  00F6               	movwf	_var
   874     0037  0872               	movf	??_isr+1,w
   875     0038  00F7               	movwf	_var+1
   876     0039                     i1l766:
   877                           
   878                           ;main.c: 59:         if (var == 2){
   879     0039  3002               	movlw	2
   880     003A  0676               	xorwf	_var,w
   881     003B  0477               	iorwf	_var+1,w
   882     003C  1D03               	btfss	3,2
   883     003D  283F               	goto	u6_21
   884     003E  2840               	goto	u6_20
   885     003F                     u6_21:
   886     003F  2849               	goto	i1l64
   887     0040                     u6_20:
   888     0040                     i1l768:
   889                           
   890                           ;main.c: 60:             spiWrite(voltaje1);
   891     0040  0878               	movf	_voltaje1,w
   892     0041  120A  118A  20CD  120A  118A  	fcall	_spiWrite
   893     0046                     i1l770:
   894                           
   895                           ;main.c: 61:             PIR1bits.SSPIF = 0;
   896     0046  1283               	bcf	3,5	;RP0=0, select bank0
   897     0047  1303               	bcf	3,6	;RP1=0, select bank0
   898     0048  118C               	bcf	12,3	;volatile
   899     0049                     i1l64:
   900     0049  0874               	movf	??_isr+3,w
   901     004A  008A               	movwf	10
   902     004B  0E73               	swapf	??_isr+2,w
   903     004C  0083               	movwf	3
   904     004D  0EFE               	swapf	btemp,f
   905     004E  0E7E               	swapf	btemp,w
   906     004F  0009               	retfie
   907     0050                     __end_of_isr:
   908                           
   909                           	psect	intentry
   910     0004                     __pintentry:	
   911                           ;incstack = 0
   912                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   913                           
   914     0004                     interrupt_function:
   915     007E                     saved_w	set	btemp
   916     0004  00FE               	movwf	btemp
   917     0005  0E03               	swapf	3,w
   918     0006  00F3               	movwf	??_isr+2
   919     0007  080A               	movf	10,w
   920     0008  00F4               	movwf	??_isr+3
   921     0009  120A  118A  2816   	ljmp	_isr
   922                           
   923                           	psect	text5
   924     00CD                     __ptext5:	
   925 ;; *************** function _spiWrite *****************
   926 ;; Defined at:
   927 ;;		line 34 in file "../ed2_3_master.X/SPI.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  dat             1    wreg     unsigned char 
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  dat             1    0[COMMON] unsigned char 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   941 ;;      Params:         0       0       0       0       0
   942 ;;      Locals:         1       0       0       0       0
   943 ;;      Temps:          0       0       0       0       0
   944 ;;      Totals:         1       0       0       0       0
   945 ;;Total ram usage:        1 bytes
   946 ;; Hardware stack levels used: 1
   947 ;; This function calls:
   948 ;;		Nothing
   949 ;; This function is called by:
   950 ;;		_isr
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954     00CD                     _spiWrite:	
   955                           ;psect for function _spiWrite
   956                           
   957                           
   958                           ;incstack = 0
   959                           ; Regs used in _spiWrite: [wreg]
   960                           ;spiWrite@dat stored from wreg
   961     00CD  00F0               	movwf	spiWrite@dat
   962     00CE                     i1l742:
   963                           
   964                           ;../ed2_3_master.X/SPI.c: 34: void spiWrite(unsigned char dat);../ed2_3_master.X/SPI.c: 
      +                          35: {;../ed2_3_master.X/SPI.c: 36:     SSPBUF = dat;
   965     00CE  0870               	movf	spiWrite@dat,w
   966     00CF  1283               	bcf	3,5	;RP0=0, select bank0
   967     00D0  1303               	bcf	3,6	;RP1=0, select bank0
   968     00D1  0093               	movwf	19	;volatile
   969     00D2                     i1l94:
   970     00D2  0008               	return
   971     00D3                     __end_of_spiWrite:
   972                           
   973                           	psect	text6
   974     00BD                     __ptext6:	
   975 ;; *************** function _spiRead *****************
   976 ;; Defined at:
   977 ;;		line 47 in file "../ed2_3_master.X/SPI.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;		None
   980 ;; Auto vars:     Size  Location     Type
   981 ;;		None
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      unsigned char 
   984 ;; Registers used:
   985 ;;		wreg, status,2, status,0, pclath, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   991 ;;      Params:         0       0       0       0       0
   992 ;;      Locals:         0       0       0       0       0
   993 ;;      Temps:          0       0       0       0       0
   994 ;;      Totals:         0       0       0       0       0
   995 ;;Total ram usage:        0 bytes
   996 ;; Hardware stack levels used: 1
   997 ;; Hardware stack levels required when called: 1
   998 ;; This function calls:
   999 ;;		_spiReceiveWait
  1000 ;; This function is called by:
  1001 ;;		_isr
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005     00BD                     _spiRead:	
  1006                           ;psect for function _spiRead
  1007                           
  1008     00BD                     i1l736:	
  1009                           ;incstack = 0
  1010                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1011                           
  1012                           
  1013                           ;../ed2_3_master.X/SPI.c: 49:     spiReceiveWait();
  1014     00BD  120A  118A  20C6  120A  118A  	fcall	_spiReceiveWait
  1015     00C2                     i1l738:
  1016                           
  1017                           ;../ed2_3_master.X/SPI.c: 50:     return(SSPBUF);
  1018     00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1019     00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1020     00C4  0813               	movf	19,w	;volatile
  1021     00C5                     i1l102:
  1022     00C5  0008               	return
  1023     00C6                     __end_of_spiRead:
  1024                           
  1025                           	psect	text7
  1026     00C6                     __ptext7:	
  1027 ;; *************** function _spiReceiveWait *****************
  1028 ;; Defined at:
  1029 ;;		line 29 in file "../ed2_3_master.X/SPI.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;		None
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		None
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1043 ;;      Params:         0       0       0       0       0
  1044 ;;      Locals:         0       0       0       0       0
  1045 ;;      Temps:          0       0       0       0       0
  1046 ;;      Totals:         0       0       0       0       0
  1047 ;;Total ram usage:        0 bytes
  1048 ;; Hardware stack levels used: 1
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_spiRead
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056     00C6                     _spiReceiveWait:	
  1057                           ;psect for function _spiReceiveWait
  1058                           
  1059     00C6                     i1l704:	
  1060                           ;incstack = 0
  1061                           ; Regs used in _spiReceiveWait: []
  1062                           
  1063     00C6                     i1l88:	
  1064                           ;../ed2_3_master.X/SPI.c: 31:     while ( !SSPSTATbits.BF );
  1065                           
  1066     00C6  1683               	bsf	3,5	;RP0=1, select bank1
  1067     00C7  1303               	bcf	3,6	;RP1=0, select bank1
  1068     00C8  1C14               	btfss	20,0	;volatile
  1069     00C9  28CB               	goto	u2_21
  1070     00CA  28CC               	goto	u2_20
  1071     00CB                     u2_21:
  1072     00CB  28C6               	goto	i1l88
  1073     00CC                     u2_20:
  1074     00CC                     i1l91:
  1075     00CC  0008               	return
  1076     00CD                     __end_of_spiReceiveWait:
  1077     007E                     btemp	set	126	;btemp
  1078     007E                     wtemp0	set	126
  1079                           
  1080                           	psect	idloc
  1081                           
  1082                           ;Config register IDLOC0 @ 0x2000
  1083                           ;	unspecified, using default values
  1084     2000                     	org	8192
  1085     2000  3FFF               	dw	16383
  1086                           
  1087                           ;Config register IDLOC1 @ 0x2001
  1088                           ;	unspecified, using default values
  1089     2001                     	org	8193
  1090     2001  3FFF               	dw	16383
  1091                           
  1092                           ;Config register IDLOC2 @ 0x2002
  1093                           ;	unspecified, using default values
  1094     2002                     	org	8194
  1095     2002  3FFF               	dw	16383
  1096                           
  1097                           ;Config register IDLOC3 @ 0x2003
  1098                           ;	unspecified, using default values
  1099     2003                     	org	8195
  1100     2003  3FFF               	dw	16383
  1101                           
  1102                           	psect	config
  1103                           
  1104                           ;Config register CONFIG1 @ 0x2007
  1105                           ;	Oscillator Selection bits
  1106                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1107                           ;	Watchdog Timer Enable bit
  1108                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1109                           ;	Power-up Timer Enable bit
  1110                           ;	PWRTE = OFF, PWRT disabled
  1111                           ;	RE3/MCLR pin function select bit
  1112                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1113                           ;	Code Protection bit
  1114                           ;	CP = OFF, Program memory code protection is disabled
  1115                           ;	Data Code Protection bit
  1116                           ;	CPD = OFF, Data memory code protection is disabled
  1117                           ;	Brown Out Reset Selection bits
  1118                           ;	BOREN = OFF, BOR disabled
  1119                           ;	Internal External Switchover bit
  1120                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1121                           ;	Fail-Safe Clock Monitor Enabled bit
  1122                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1123                           ;	Low Voltage Programming Enable bit
  1124                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1125                           ;	In-Circuit Debugger Mode bit
  1126                           ;	DEBUG = 0x1, unprogramme  1127     2007                     	org	8199
  1128     2007  20D4               	dw	8404
  1129                           
  1130                           ;Config register CONFIG2 @ 0x2008
  1131                           ;	Brown-out Reset Selection bit
  1132                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1133                           ;	Flash Program Memory Self Write Enable bits
  1134                           ;	WRT = OFF, Write protection off
  1135     2008                     	org	8200
  1136     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setupADC
    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     456
                              _setup
                           _setupADC
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              5 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0      15
                                              1 COMMON     4     4      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _setupADC

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 03 02:13:27 2023

            _SSPSTATbits 0094                       l70 00AB                       l67 0078  
                     l84 0091                       l85 0096                       u80 0081  
                     u81 0080                       u97 00A9                      l820 0081  
                    l732 0097                      l822 0087                      l830 0054  
                    l734 00A7                      l824 0089                      l840 0063  
                    l832 0055                      l826 0090                      l818 007A  
                    l850 006C                      l842 0066                      l834 005E  
                    l852 006D                      l844 0069                      l836 005F  
                    l828 0050                      l846 006A                      l838 0060  
                    l854 00AC                      l848 006B                      l856 00B6  
                    _isr 0016                      _var 0076                     ?_isr 0070  
                   i1l64 0049                     i1l91 00CC                     i1l94 00D2  
                   i1l88 00C6                     u2_20 00CC                     u2_21 00CB  
                   u3_20 001C                     u3_21 001B                     u4_20 0025  
                   u4_21 0024                     u5_20 002E                     u5_21 002D  
                   u6_20 0040                     u6_21 003F                     _main 00AC  
                   btemp 007E                     start 000C                    ??_isr 0071  
                  ?_main 0070                    i1l102 00C5                    i1l704 00C6  
                  i1l742 00CE                    i1l736 00BD                    i1l760 0029  
                  i1l752 0016                    i1l738 00C2                    i1l770 0046  
                  i1l754 001C                    i1l762 002A                    i1l764 002E  
                  i1l756 0025                    i1l766 0039                    i1l758 0027  
                  i1l768 0040                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _setup 0050  
                  pclath 000A          __end_of_spiInit 0097          __end_of_spiRead 00C6  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00BD                   ??_main 0076                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of_setupADC 00AC                   saved_w 007E  
       __end_of_spiWrite 00D3                ??_spiInit 0075                ??_spiRead 0070  
__end_of__initialization 0012           __pcstackCOMMON 0070            __end_of_setup 0079  
                ??_setup 0076               __pmaintext 00AC               __pintentry 0004  
                _SSPSTAT 0094                ?_setupADC 0070                ?_spiWrite 0070  
              _ANSELbits 0188                  __ptext1 0097                  __ptext2 0050  
                __ptext3 0079                  __ptext4 0016                  __ptext5 00CD  
                __ptext6 00BD                  __ptext7 00C6                  _spiInit 0079  
                _spiRead 00BD     end_of_initialization 0012               ??_setupADC 0075  
             ??_spiWrite 0070                _TRISAbits 0085                _TRISCbits 0087  
            spiWrite@dat 0070           _spiReceiveWait 00C6      start_initialization 000F  
            __end_of_isr 0050   __end_of_spiReceiveWait 00CD              __pbssCOMMON 0076  
              ___latbits 0002            __pcstackBANK0 0020          ?_spiReceiveWait 0070  
               ?_spiInit 0020                 ?_spiRead 0070     spiInit@sTransmitEdge 0022  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0020  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
               _setupADC 0097                 _spiWrite 00CD             spiInit@sType 0075  
      spiInit@sClockIdle 0021                 _voltaje1 0078               _INTCONbits 000B  
               intlevel1 0000         ??_spiReceiveWait 0070               _OSCCONbits 008F  
